//* IMPORTS

@use '../global/vars';
@use '../global/mixins';
@use '../global/extends';

.searchMenuContainer {
  position: relative;
  @include mixins.fixed-tag($fixed-tag-top: 295px, $fixed-tag-bgImage: null);
  @include mixins.flex-box($jc: space-between, $ai: start);
  height: auto;
  overflow: hidden;
  transition: all 0.5s ease-in-out;
  z-index: 3;
}

.searchMenuContainer.expanded {
  width: 90vw;
}

//* SEARCH MENU BUTTON

.searchMenuButton {
  @extend %search-resetButton;
  transition: all 0.5s ease;

  .searchMenuButton > p,
  .searchMenuIcon {
    transition: transform 0.5s ease, opacity 0.5s ease;
  }
}

.searchMenuButton:not(.expanded),
.resetMenuButton:not(.expanded) {
  @media (max-width: 425px) {
    width: 45%;
    padding-top: 4px;
  }

  .searchMenuIcon,
  .resetButtonIcon {
    @media (max-width: 425px) {
      width: 0;
      height: 0;
    }
  }

  p {
    @media (max-width: 425px) {
      font-size: vars.$button-font-size-small + 0.5em;
      letter-spacing: 0.085rem;
    }
  }
}

.searchMenuButton.expanded {
  @extend %search-button-expanded;

  width: 90%;
  overflow: hidden;
}

.resetMenuButton {
  position: relative;
  z-index: 3;

  @extend %search-resetButton;
  @include mixins.flex-box(
    $direction: row-reverse,
    $jc: start,
    $gap: vars.$gap-s
  );
  padding-left: vars.$padding-l;
  border-radius: 0;
  border-top-left-radius: vars.$border-radius-button;
  border-bottom-left-radius: vars.$border-radius-button;
  box-shadow: vars.$button-reset-boxShadow;

  position: absolute;
  right: 0;
  top: 0;
  transform: translateX(0);
  opacity: 1;
  transition: transform 1s ease, opacity 1s ease;
}

.resetMenuButton.contracted {
  transform: translateX(100%);
  opacity: 0;
  transition: transform 0.5s ease, opacity 0.5s ease;
}

.hover-disabled {
  pointer-events: none;

  &:hover {
    background-color: initial;
    color: initial;
    transform: none;
  }
}
